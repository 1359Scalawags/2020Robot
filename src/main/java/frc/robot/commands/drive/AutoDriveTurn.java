// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.commands.drive;

//import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj2.command.CommandBase;
//import frc.robot.Constants;  //is this being used? If so uncomment.
//import frc.robot.Robot;
import frc.robot.Robot;
//import frc.robot.RobotMap;
import frc.robot.Constants.Drive;

/**
 *
 */
public class AutoDriveTurn extends CommandBase {

    private double targetangle;
    private double currentangle;


    public AutoDriveTurn(float angle) { 
        addRequirements(Robot.driveSystem);
        //right is positive, left is negative
        targetangle = angle;

    }

    // Called just before this Command runs the first time
    @Override
    public void initialize() {
        //reset the gyro
        //get current angle
        //Robot.driveSystem.ResetGyro();
        //currentangle = Robot.driveSystem.getAngle();
        currentangle = Robot.driveSystem.getAngle();
        System.out.println("Robot Current Angle: " + currentangle);
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    public void execute() {
        Robot.driveSystem.arcadeDrive(0.0, Drive.maxRightTurnRate, targetangle);
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    public boolean isFinished() {
        //double distance = Math.abs(a - b);
        //if(Math.abs(a - b) < 0.5)
        //is the target angle the same as the current angle?
        double diff = Math.abs(targetangle - currentangle);
        
        if (diff < Drive.AutoTurnAngleThreshold){
            return true;
        }
        else{
            return false;
        }
    }

    // Called once after isFinished returns true
    @Override
    public void end(boolean interrupted) {
        //stop arcade drive
        Robot.driveSystem.arcadeDrive(0, 0, 0);
    }
}
